>>>>>>> Questions <<<<<<<
You are tasked with building the queries to retrieve the following information:

1. Find the first_name, last_name, email, phone_number, hire_date and department_id of all the employees with the latest hire_date in each department. 
2. Find the first_name, last_name, email, phone_number, hire_date and department_id of all the employees with the oldest  hire_date in each department. 
3. Find the first_name, last_name, employee_id, phone_number, salary and department_id of all the employees with the lowest salary in each department. 
4. Find the first_name, last_name, employee_id, commission_pct and department_id of all the employees in department XYZABC (department_id = 7) who have a lower commission_pct than all of the employees of department ABCXYZ(department_id = 5). 
5. Find the Total number of employees in each department. 
6. Find the first_name, last_name, employee_id, email, salary and department_id of all the employees who joined before 2020. 
7. Find the first_name, last_name, employee_id, email, salary and department_id of the employee who has the highest salary working under the manager with id= abcd998773. 
8. Find the department_id for which does not have any employee under it with a salary more than 30,000.
9. For each of the departments, find the department_id, job_id and commission_pct with commission_pct less than at least one other job_id in the department.
10. Find the first_name, last_name, employee_id, email, salary, department_id and commission_pct of the employee who has the lowest commission_pct under each manager. 
11. Count the number of employees where the employee is a manager.
12. For each of the departments, find the department_id, job_id and salary with salary less than at least one other job_id in the department.
13. Find the manager_id for who have at least one employee under them with a salary greater than 1500.
14. Find the manager_id for who have at least one employee under them with a commission_pct less than 15.25.
15. Find the manager_id for who does not have any employee under them with a salary less than 3500.
____________________
>>>>>>> Answers <<<<<<<

1. SELECT first_name, last_name, email, phone_number, hire_date, department_id FROM employees WHERE hire_date IN (SELECT max(hire_date) FROM employees GROUP BY department_id); (Correct)
2. SELECT first_name, last_name, email, phone_number, hire_date, department_id FROM employees WHERE hire_date IN (SELECT min(hire_date) FROM employees GROUP BY department_id); (Correct)
3. SELECT first_name, last_name, employee_id, phone_number, salary, department_id FROM employees WHERE salary IN (SELECT min(salary) FROM employees GROUP BY department_id); (Correct)
4. SELECT first_name, last_name, employee_id, commission_pct, department_id FROM employees WHERE department_id = 7 AND commission_pct < ALL (SELECT commission_pct FROM employees WHERE department_id = 5); (Correct)
5. SELECT department_id, COUNT(*) FROM employees GROUP BY department_id; (Correct) 
6. SELECT first_name, last_name, employee_id, email, salary, department_id FROM employees WHERE hire_date<2020-01-01; (Correct)
7. SELECT first_name, last_name, employee_id, email, salary, department_id FROM employees WHERE salary = (SELECT max(salary) FROM employees WHERE manager_id = 'abcd998773'); (Correct)
8. SELECT DISTINCT department_id FROM employees E1 WHERE NOT EXISTS (SELECT * FROM employees E2 WHERE E1.department_id = E2.department_id AND E2.salary > 30000); (Correct) 
9. SELECT department_id, job_id, commission_pct FROM employees E1 WHERE EXISTS (SELECT * FROM employees E2 WHERE E2.department_id = E1.department_id AND E2.job_id != E1.job_id AND E1.commission_pct < E2.commission_pct); (Correct)
10. SELECT first_name, last_name, employee_id, email, salary, department_id, commission_pct FROM employees WHERE commission_pct IN (SELECT min(commission_pct) FROM employees GROUP BY manager_id); (Correct)
11. SELECT COUNT(*) FROM employees WHERE employee_id IN (SELECT manager_id FROM employees); (Correct) 
12. SELECT department_id, job_id, salary FROM employees E1 WHERE EXISTS (SELECT * FROM employees E2 WHERE E2.department_id = E1.department_id AND E2.job_id != E1.job_id AND E1.salary < E2.salary); (Correct)
13. SELECT DISTINCT manager_id FROM employees E1 WHERE EXISTS (SELECT * FROM employees E2 WHERE E1.manager_id = E2.manager_id AND E1.salary > 1500); (Correct) 
14. SELECT DISTINCT manager_id FROM employees E1 WHERE EXISTS (SELECT * FROM employees E2 WHERE E1.manager_id = E2.manager_id AND E1.commission_pct < 15.250); (Correct)
15. SELECT DISTINCT manager_id FROM employees E1 WHERE NOT EXISTS (SELECT * FROM employees E2 WHERE E1.manager_id = E2.manager_id AND E2.salary < 3500);  (Correct) 
____________________
>>>>>>> Creating table <<<<<<<

CREATE table employees
( 
employee_id char(10),
first_name varchar(20),
last_name varchar(20),
email varchar(60),
phone_number char(14),
hire_date date,
job_id int,
salary int,
commission_pct decimal(5,3),
manager_id char(10),
department_id int
);

____________________
>>>>>>> Inserting datas <<<<<<<

INSERT INTO employees VALUES
('e3', 'A', 'B', 'ab@gmail.com', '0173', '2020-09-15', 112, 5500, 53.000, 'e5', 5),
('e18', 'O', 'P', 'op@gmail.com', '0143', '2020-03-25', 101, 10000, 51.000, 'e5', 5),
('e13', 'Ro', 'Ka', 'roka@gmail.com', '0191', '2021-02-18', 121, 4000, 16.000, 'e5', 5),
('e7', 'Bo', 'Lo', 'bolo@gmail.com', '0152', '2020-06-02', 114, 13000, 43.000, 'e5', 5),

('e21', 'I', 'J', 'ij@gmail.com', '0152', '2021-10-25', 107, 2000, 52.000, 'e3', 3),
('e5', 'Y', 'Z', 'yz@gmail.com', '0141', '2020-12-26', 116, 7000, 50.000, 'e3', 3),
('e16', 'So', 'Mo', 'somo@gmail.com', '0161', '2020-02-19', 104, 9000, 33.000, 'e3', 3),
('e2', 'Ko', 'Ba', 'koba@gmail.com', '0182', '2020-03-03', 123, 5000, 64.000, 'e3', 3),

('e12', 'W', 'X', 'wx@gmail.com', '0172', '2020-08-25', 118, 12000, 44.000, 'e20', 2),
('e8', 'Im', 'On', 'imon@gmail.com', '0151', '2021-05-06', 105, 2000, 23.000, 'e20', 2),
('e23', 'M', 'N', 'mn@gmail.com', '0174', '2020-12-14', 124, 6000, 32.000, 'e20', 2),
('e20', 'E', 'F', 'ef@gmail.com', '0183', '2020-04-13', 103, 5300, 54.000, 'e20', 2),

('e11', 'U', 'V', 'uv@gmail.com', '0142', '2020-07-15', 106, 7500, 34.000, 'e12', 6),
('e4', 'He', 'Na', 'hena@gmail.com', '0171', '2020-01-16', 102, 5000, 47.000, 'e12', 6),
('e14', 'K', 'L', 'kl@gmail.com', '0149', '2020-06-29', 115, 15000, 24.000, 'e12', 6),
('e19', 'Of', 'To', 'ofto@gmail.com', '0187', '2020-02-04', 110, 2000, 19.000, 'e12', 6),

('e17', 'Ra', 'Bi', 'rabi@gmail.com', '0193', '2020-12-23', 122, 3500, 55.000, 'e10', 1),
('e1', 'G', 'H', 'gh@gmail.com', '0145', '2021-04-12', 108, 14000, 35.000, 'e10', 1),
('e22', 'Q', 'R', 'qr@gmail.com', '0131', '2021-01-08', 119, 4500, 67.000, 'e10', 1),
('e6', 'Ka', 'Yo', 'kayo@gmail.com', '0162', '2020-04-17', 113, 7000, 41.000, 'e10', 1),

('e10', 'C', 'D', 'cd@gmail.com', '0155', '2020-03-27', 120, 9000, 47.000, 'e24', 4),
('e15', 'Pe', 'Te', 'pete@gmail.com', '0177', '2020-11-16', 109, 3000, 38.000, 'e24', 4),
('e24', 'As', 'Ma', 'asma@gmail.com', '0166', '2021-04-04', 111, 6500, 21.000, 'e24', 4),
('e9', 'S', 'T', 'st@gmail.com', '0133', '2020-09-23', 117, 3300, 40.000, 'e24', 4);





